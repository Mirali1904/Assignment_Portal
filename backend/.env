PORT=5000
MONGO_URI=mongodb://127.0.0.1:27017/Assignment_Portal
CLOUDINARY_CLOUD_NAME=ddnqavq6z
CLOUDINARY_API_KEY=468884788547126
CLOUDINARY_API_SECRET=5Wbmh1YJwIREjWK6Mi9IG9eaoM0
NEXT_PUBLIC_AI_DETECTION_API_KEY=your_actual_key_here

const handleAiAnalysis = async (submission: Submission) => {
  setIsAiAnalyzing(true);
  setAiAnalysis(null);

  try {
    // Get the API key safely
    const apiKey = process.env.NEXT_PUBLIC_AI_DETECTION_API_KEY;
    if (!apiKey) throw new Error("API key not configured");

    // Prepare headers with proper typing
    const headers: HeadersInit = {
      'Content-Type': 'application/json',
      'x-api-key': apiKey
    };

    // Get content - either from property or extract from file
    const content = submission.content || await extractTextFromPdf(submission.fileUrl);

    const response = await fetch('https://api.gptzero.me/v2/predict/text', {
      method: 'POST',
      headers, // Now properly typed
      body: JSON.stringify({
        document: content,
        title: submission.studentName || 'Student Submission'
      })
    });

    if (!response.ok) throw new Error(`API error: ${response.status}`);

    const data = await response.json() as {
      docs: Array<{ average_generated_prob: number }>
    };

    const aiProbability = Math.round(data.docs[0].average_generated_prob * 100);

    setAiAnalysis(
      `AI Detection: ${aiProbability}% probability. ` +
      `This shows ${
        aiProbability < 20 ? 'minimal' : 
        aiProbability < 50 ? 'moderate' : 
        'strong'
      } signs of AI generation.`
    );
  } catch (error) {
    console.error('Detection failed:', error);
    setAiAnalysis('Analysis failed. Please try again.');
  } finally {
    setIsAiAnalyzing(false);
  }
};

  async function extractTextFromPdf(pdfUrl: string): Promise<string> {
  // Implement using a PDF library or API
  // This is a placeholder implementation
  const response = await fetch(pdfUrl);
  const blob = await response.blob();
  // You would need a PDF text extraction library here
  throw new Error("PDF text extraction not implemented");
}
